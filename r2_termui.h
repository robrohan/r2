/* r2_termui - v0.0 - public domain very basic, terminal control sequences for
    cursor control
    no warranty implied; use at your own risk

    Built in the style of: https://github.com/nothings/stb

    This is written with, mostly, game development in mind.

    Usage:
    #include "r2_termui.h"

    void main(void) 
    {
        printf(ESC_ERASE_SCREEN);
        printf(ESC_CURSOR_POS, 10, 10);
        unsigned int pixel_color = 34; // blue
        printf(ESC_SET_ATTRIBUTE_MODE_1, pixel_color);
        printf("%s", "Hello World\n");
        printf(ESC_SET_ATTRIBUTE_MODE_1, 0);
        printf("\n\n\n");
        printf(ESC_SHOW_CURSOR);
    }

LICENSE
    See end of file for license information.
*/
#ifndef R2_TERMCUI_H
#define R2_TERMCUI_H

#ifdef __cplusplus
extern "C"
{
#endif

// #define NB_COLORS 8

#define ESC_START                  '\033'

#define ESC_IDENTIFY               "\033[c"
#define ESC_REPORT_DEVICE          "\033[%d0c"

// https://www2.ccs.neu.edu/research/gpc/VonaUtils/vona/terminal/vtansi.htm

///////////////////////////////
// Device Status
///////////////////////////////
/* The following codes are used for reporting terminal/display settings, and vary depending on the implementation: */

/* Requests a Report Device Code response from the device. */
#define ESC_QUERY_DEVICE_CODE      "\033[c"

/* Generated by the device in response to Query Device Code request. */
#define ESC_REPORT_DEVICE_CODE     "\033[%d0c"

/* Requests a Report Device Status response from the device. */
#define ESC_QUERY_DEVICE_STATUS    "\033[5n"

/* Generated by the device in response to a Query Device Status request; indicates that device is functioning correctly. */
#define ESC_REPORT_DEVICE_OK       "\033[0n"

/* Generated by the device in response to a Query Device Status request; indicates that device is functioning improperly. */ 
#define ESC_REPORT_DEVICE_FAILURE  "\033[3n"

/* Requests a Report Cursor Position response from the device. */  
#define ESC_QUERY_CURSOR_POSITION  "\033[6n"

/* Generated by the device in response to a Query Cursor Position request; reports current cursor position. */   
#define ESC_REPORT_CURSOR_POSITION "\033[%d;%dR"

/////////////////////////////// 
// Cursor Control
/////////////////////////////// 
/* Sets the cursor position where subsequent
text will begin. If no row/column parameters are provided (ie. \033[H), 
the cursor will move to the home position, at the upper left of the screen. */
#define ESC_CURSOR_POS             "\033[%d;%dH"
#define ESC_CURSOR_HOME            "\033[H"

/* Moves the cursor up by COUNT rows; the default count is 1. */
#define ESC_CURSOR_UP              "\033[%dA"

/* Moves the cursor down by COUNT rows; the default count is 1. */
#define ESC_CURSOR_DOWN            "\033[%dB"

/* Moves the cursor forward by COUNT columns; the default count is 1. */
#define ESC_CURSOR_FORWARD         "\033[%dC"

/* Moves the cursor backward by COUNT columns; the default count is 1. */
#define ESC_CURSOR_BACKWARD        "\033[%dD"

/* Identical to Cursor Home. */
#define ESC_FORCE_CURSOR_POS       "\033[%d;%df"

/* Save current cursor position. */
#define ESC_SAVE_CURSOR            "\033[s"

/* Restores cursor position after a Save Cursor. */
#define ESC_UNSAVE_CURSOR          "\033[u"

#define ESC_HIDE_CURSOR            "\033[?25l"

#define ESC_SHOW_CURSOR            "\033[?25h"

/* Save current cursor position. */
// #define ESC_SAVE_CURSOR_ATTR    "\0337"

/* Restores cursor position after a Save Cursor. */
// #define ESC_RESTORE_CURSOR_ATTR "\0338"

///////////////////////////////
// Erasing Text
///////////////////////////////
/* Erases from the current cursor position to the end of the current line. */
#define ESC_ERASE_END_OF_LINE      "\033[K"

/* Erases from the current cursor position to the start of the current line. */
#define ESC_ERASE_START_OF_LINE    "\033[1K"

/* Erases the entire current line. */
#define ESC_ERASE_LINE		       "\033[2K"

/* Erases the screen from the current line down to the bottom of the screen. */
#define ESC_ERASE_DOWN		       "\033[J"

/* Erases the screen from the current line up to the top of the screen. */
#define ESC_ERASE_UP	           "\033[1J"

/* Erases the screen with the background colour and moves the cursor to home. */
#define ESC_ERASE_SCREEN		   "\033[2J"

///////////////////////////////
// Define Key
///////////////////////////////
/* Associates a string of text to a keyboard key. {key} indicates the key by its ASCII value in decimal. */
#define ESC_SET_KEY_DEFINITION	   "\033[%d;\"%s\"p"

///////////////////////////////
// Set Display Attributes
///////////////////////////////
/* Sets multiple display attribute settings. The following lists standard attributes: */
#define ESC_SET_ATTRIBUTE_MODE_3   "\033[%d;%d;%dm"
#define ESC_SET_ATTRIBUTE_MODE_2   "\033[%d;%dm"
#define ESC_SET_ATTRIBUTE_MODE_1   "\033[%dm"
/*
0	Reset all attributes
1	Bright
2	Dim
4	Underscore	
5	Blink
7	Reverse
8	Hidden

----Foreground Colours
30	Black
31	Red
32	Green
33	Yellow
34	Blue
35	Magenta
36	Cyan
37	White

----Background Colours
40	Black
41	Red
42	Green
43	Yellow
44	Blue
45	Magenta
46	Cyan
47	White
*/

#ifdef __cplusplus
}
#endif

#endif /* R2_TERMCUI_H */

/*
------------------------------------------------------------------------------
This software is available under 2 licenses -- choose whichever you prefer.
------------------------------------------------------------------------------
ALTERNATIVE A - MIT License
Copyright (c) 2020 Rob Rohan
Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
------------------------------------------------------------------------------
ALTERNATIVE B - Public Domain (www.unlicense.org)
This is free and unencumbered software released into the public domain.
Anyone is free to copy, modify, publish, use, compile, sell, or distribute this
software, either in source code form or as a compiled binary, for any purpose,
commercial or non-commercial, and by any means.
In jurisdictions that recognize copyright laws, the author or authors of this
software dedicate any and all copyright interest in the software to the public
domain. We make this dedication for the benefit of the public at large and to
the detriment of our heirs and successors. We intend this dedication to be an
overt act of relinquishment in perpetuity of all present and future rights to
this software under copyright law.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
------------------------------------------------------------------------------
*/

